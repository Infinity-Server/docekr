#!/bin/bash
# Reverse Proxy Configuration for Cockpit
#
### BEGIN INIT INFO
# Provides:          cron
# Required-Start:    $remote_fs $syslog $time
# Required-Stop:     $remote_fs $syslog $time
# Should-Start:      $network $named slapd autofs ypbind nscd nslcd winbind sssd
# Should-Stop:       $network $named slapd autofs ypbind nscd nslcd winbind sssd
# Default-Start:     2 3 4 5
# Default-Stop:
### END INIT INFO

# Get function from functions library
. /lib/lsb/init-functions

transform() {
  line="$(cat)"
  name=$(echo "$line" | awk -F '=' '{print $1}')
  value="$(echo "$line" | awk -F '=' '{print $2}')"
  echo "export $name=\"$value\""
}

read_evniro() {
cat /proc/1/environ |\
  tr '\0' '\n' |\
  while IFS='' read line;
  do
    transform <<< "$line";
  done
}

source <(read_evniro)

# Start the service RP
start() {
  initlog -c "echo -n Starting RP server: "
  echo "[WebService]" > /etc/cockpit/cockpit.conf
  echo "AllowUnencrypted = true" >> /etc/cockpit/cockpit.conf
  echo "ProtocolHeader = X-Forwarded-Proto" >> /etc/cockpit/cockpit.conf
  echo "Origins = ${COCKPIT_ORIGINS}" >> /etc/cockpit/cockpit.conf
  success $"RP server startup"
  echo
}

# Restart the service RP
stop() {
  initlog -c "echo -n Stopping RP server: "
  echo
}

### main logic ###
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status RP
    ;;
  restart|reload|condrestart)
    stop
    start
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|reload|status}"
    exit 1
esac

exit 0
