#!/bin/bash

start_uml() {
  CIDR=$(cat /tmp/cidr 2>/dev/null)
  if [ "$CIDR" = "" ];
  then
    CIDR=$(ip addr show eth0 | grep inet | awk '{print $2}')
    echo $CIDR > /tmp/cidr
  fi
  
  GATEWAY=$(cat /tmp/gateway 2>/dev/null)
  if [ "$GATEWAY" = "" ];
  then
    GATEWAY=$(route | grep default | awk '{print $2}')
    echo $GATEWAY > /tmp/gateway
  fi
  
  ip addr flush dev eth0
  ip link add br0 type bridge
  ip tuntap add tap0 mode tap
  
  ip link set dev br0 up
  ip link set dev tap0 up
  ip link set tap0 master br0
  ip link set eth0 master br0
  ip addr add 192.168.123.111/24 dev br0
  
  screen -d -m linux.uml \
    rootfstype=hostfs init=/uml/init mem=1G \
    vec0:transport=tap,ifname=tap0,depth=128,gro=1 \
    cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 \
    cidr=$CIDR gateway=$GATEWAY
}

wait_ssh() {
  count=0
  timeout=30
  still_try=1
  while [ "$still_try" = "1" ] && [ $count -lt $timeout ];
  do
    echo test > /dev/tcp/192.168.123.123/12345
    still_try=$?
    count=$(expr $count + 1)
    echo "Test connection=$count ..."
    sleep 1
  done
}

if [ "$(ps aux | grep linux.uml | grep -v grep | wc -l)" = "0" ];
then
  start_uml
  wait_ssh
fi

socat - TCP:192.168.123.123:12345
